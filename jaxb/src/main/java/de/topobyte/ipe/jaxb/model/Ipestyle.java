//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.15 at 11:24:44 AM CEST 
//

package de.topobyte.ipe.jaxb.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
		"bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize" })
@XmlRootElement(name = "ipestyle")
public class Ipestyle
{

	@XmlAttribute(name = "name")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String name;
	@XmlElements({ @XmlElement(name = "bitmap", type = Bitmap.class),
			@XmlElement(name = "symbol", type = Symbol.class),
			@XmlElement(name = "preamble", type = Preamble.class),
			@XmlElement(name = "cmap", type = Cmap.class),
			@XmlElement(name = "textstyle", type = Textstyle.class),
			@XmlElement(name = "layout", type = Layout.class),
			@XmlElement(name = "textpad", type = Textpad.class),
			@XmlElement(name = "titlestyle", type = Titlestyle.class),
			@XmlElement(name = "pagenumberstyle", type = Pagenumberstyle.class),
			@XmlElement(name = "pathstyle", type = Pathstyle.class),
			@XmlElement(name = "gradient", type = Gradient.class),
			@XmlElement(name = "tiling", type = Tiling.class),
			@XmlElement(name = "effect", type = Effect.class),
			@XmlElement(name = "color", type = Color.class),
			@XmlElement(name = "dashstyle", type = Dashstyle.class),
			@XmlElement(name = "pen", type = Pen.class),
			@XmlElement(name = "textsize", type = Textsize.class),
			@XmlElement(name = "textstretch", type = Textstretch.class),
			@XmlElement(name = "opacity", type = Opacity.class),
			@XmlElement(name = "symbolsize", type = Symbolsize.class),
			@XmlElement(name = "arrowsize", type = Arrowsize.class),
			@XmlElement(name = "gridsize", type = Gridsize.class),
			@XmlElement(name = "anglesize", type = Anglesize.class) })
	protected List<Object> bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize;

	/**
	 * Gets the value of the name property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getName()
	{
		return name;
	}

	/**
	 * Sets the value of the name property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setName(String value)
	{
		this.name = value;
	}

	/**
	 * Gets the value of the
	 * bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize
	 * property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the
	 * bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize
	 * property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getBitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize()
	 * 		.add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Bitmap }
	 * {@link Symbol } {@link Preamble } {@link Cmap } {@link Textstyle }
	 * {@link Layout } {@link Textpad } {@link Titlestyle }
	 * {@link Pagenumberstyle } {@link Pathstyle } {@link Gradient }
	 * {@link Tiling } {@link Effect } {@link Color } {@link Dashstyle }
	 * {@link Pen } {@link Textsize } {@link Textstretch } {@link Opacity }
	 * {@link Symbolsize } {@link Arrowsize } {@link Gridsize } {@link Anglesize
	 * }
	 * 
	 * 
	 */
	public List<Object> getBitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize()
	{
		if (bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize == null) {
			bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize = new ArrayList<Object>();
		}
		return this.bitmapOrSymbolOrPreambleOrCmapOrTextstyleOrLayoutOrTextpadOrTitlestyleOrPagenumberstyleOrPathstyleOrGradientOrTilingOrEffectOrColorOrDashstyleOrPenOrTextsizeOrTextstretchOrOpacityOrSymbolsizeOrArrowsizeOrGridsizeOrAnglesize;
	}

}
