//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.15 at 11:24:44 AM CEST 
//

package de.topobyte.ipe.jaxb.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "value" })
@XmlRootElement(name = "image")
public class Image
{

	@XmlAttribute(name = "layer")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String layer;
	@XmlAttribute(name = "matrix")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String matrix;
	@XmlAttribute(name = "pin")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String pin;
	@XmlAttribute(name = "transformations")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String transformations;
	@XmlAttribute(name = "rect", required = true)
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String rect;
	@XmlAttribute(name = "bitmap")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String bitmap;
	@XmlAttribute(name = "width")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String width;
	@XmlAttribute(name = "height")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String height;
	@XmlAttribute(name = "ColorSpace")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String colorSpace;
	@XmlAttribute(name = "BitsPerComponent")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String bitsPerComponent;
	@XmlAttribute(name = "length")
	@XmlJavaTypeAdapter(NormalizedStringAdapter.class)
	protected String length;
	@XmlAttribute(name = "encoding")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String encoding;
	@XmlAttribute(name = "Filter")
	@XmlJavaTypeAdapter(CollapsedStringAdapter.class)
	protected String filter;
	@XmlValue
	protected String value;

	/**
	 * Gets the value of the layer property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getLayer()
	{
		return layer;
	}

	/**
	 * Sets the value of the layer property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setLayer(String value)
	{
		this.layer = value;
	}

	/**
	 * Gets the value of the matrix property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getMatrix()
	{
		if (matrix == null) {
			return "1 0 0 1 0 0";
		} else {
			return matrix;
		}
	}

	/**
	 * Sets the value of the matrix property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setMatrix(String value)
	{
		this.matrix = value;
	}

	/**
	 * Gets the value of the pin property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getPin()
	{
		return pin;
	}

	/**
	 * Sets the value of the pin property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setPin(String value)
	{
		this.pin = value;
	}

	/**
	 * Gets the value of the transformations property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getTransformations()
	{
		if (transformations == null) {
			return "affine";
		} else {
			return transformations;
		}
	}

	/**
	 * Sets the value of the transformations property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setTransformations(String value)
	{
		this.transformations = value;
	}

	/**
	 * Gets the value of the rect property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getRect()
	{
		return rect;
	}

	/**
	 * Sets the value of the rect property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setRect(String value)
	{
		this.rect = value;
	}

	/**
	 * Gets the value of the bitmap property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getBitmap()
	{
		return bitmap;
	}

	/**
	 * Sets the value of the bitmap property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setBitmap(String value)
	{
		this.bitmap = value;
	}

	/**
	 * Gets the value of the width property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getWidth()
	{
		return width;
	}

	/**
	 * Sets the value of the width property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setWidth(String value)
	{
		this.width = value;
	}

	/**
	 * Gets the value of the height property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getHeight()
	{
		return height;
	}

	/**
	 * Sets the value of the height property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setHeight(String value)
	{
		this.height = value;
	}

	/**
	 * Gets the value of the colorSpace property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getColorSpace()
	{
		if (colorSpace == null) {
			return "DeviceRGB";
		} else {
			return colorSpace;
		}
	}

	/**
	 * Sets the value of the colorSpace property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setColorSpace(String value)
	{
		this.colorSpace = value;
	}

	/**
	 * Gets the value of the bitsPerComponent property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getBitsPerComponent()
	{
		if (bitsPerComponent == null) {
			return "8";
		} else {
			return bitsPerComponent;
		}
	}

	/**
	 * Sets the value of the bitsPerComponent property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setBitsPerComponent(String value)
	{
		this.bitsPerComponent = value;
	}

	/**
	 * Gets the value of the length property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getLength()
	{
		return length;
	}

	/**
	 * Sets the value of the length property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setLength(String value)
	{
		this.length = value;
	}

	/**
	 * Gets the value of the encoding property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getEncoding()
	{
		return encoding;
	}

	/**
	 * Sets the value of the encoding property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setEncoding(String value)
	{
		this.encoding = value;
	}

	/**
	 * Gets the value of the filter property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getFilter()
	{
		return filter;
	}

	/**
	 * Sets the value of the filter property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setFilter(String value)
	{
		this.filter = value;
	}

	/**
	 * Gets the value of the value property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getvalue()
	{
		return value;
	}

	/**
	 * Sets the value of the value property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setvalue(String value)
	{
		this.value = value;
	}

}
